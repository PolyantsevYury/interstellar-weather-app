{"version":3,"sources":["img/context_camera.PNG","App.styles.js","theme.js","helpers.js","components/TogglePlanet/TogglePlanet.styles.js","components/TogglePlanet/TogglePlanet.js","components/Weather/MarsWeather/Previous/Previous.styles.js","components/Weather/MarsWeather/Previous/Previous.js","components/Weather/MarsWeather/Unit/Unit.styles.js","components/Weather/MarsWeather/Unit/Unit.js","components/Weather/WeatherData.styles.js","components/Weather/MarsWeather/MarsWeatherData.js","components/Weather/Weather.styles.js","components/Weather/MarsWeather/MarsWeather.js","components/Weather/EarthWeather/EarthWeatherData.js","components/Weather/EarthWeather/EarthWeather.js","App.js","serviceWorker.js","index.js","img/mars.jpg","img/earth.jpg"],"names":["module","exports","GlobalStyle","createGlobalStyle","props","imageUrl","theme","backgroundPosition","AppWrapper","styled","div","WeatherBlock","main","marsTheme","themeColor","earthTheme","formatTemperature","temperature","isMetric","returnTemp","Math","round","ToggleWrapper","TogglePlanet","planet","setPlanet","type","onChange","id","defaultChecked","htmlFor","className","PreviousWrapper","PreviousDays","PreviousDay","Previous","marsWeather","setSelectedSol","marsLoading","grid","gutter","column","dataSource","style","minWidth","renderItem","item","Item","key","sol","bodyStyle","padding","color","border","borderRadius","backgroundColor","date","maxTemp","minTemp","onClick","itemNumber","UnitStyles","Toggle","button","metric","Unit","setMetric","prev","WeatherWrapper","WeatherItem","WeatherInstance","MarsWeatherData","windSpeed","src","currentPhoto","alt","overlayStyle","maxWidth","content","trigger","InfoCircleFilled","fontSize","marginLeft","WeatherTitle","h1","SectionTitle","SearchContainer","MarsWeather","selectedSol","EarthWeatherData","earthWeather","temp","humidity","pressure","EarthWeather","setEarthWeather","city","setCity","useState","earthLoading","setEarthLoading","error","setError","Search","Input","fetchEarthData","a","url","axios","get","catch","response","data","message","name","onSearch","loading","size","App","setMarsWeather","setMarsLoading","fetchMarsData","request","sol_keys","map","solKey","i","AT","mx","mn","HWS","av","Date","First_UTC","toLocaleDateString","undefined","day","month","length","useEffect","MarsBGImage","EarthBGImage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","console"],"mappings":"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","file":"static/js/main.5a4c3485.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/context_camera.ad456a3a.PNG\";","import styled, {createGlobalStyle} from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n  \n  :root {\n    --fw-light: 300;\n    --fw-normal: 400;\n    --fw-semi: 500;\n    --fw-bold: 700;\n    --fs-h1: 1.5rem;\n    --fs-h2: 2.25rem;\n    --fs-body: 1rem;\n    --fs-xl: 4.5rem;\n  }\n  \n  html {\n    height: 100%;\n  }\n  \n  body:before {\n    content: \"\";\n    display: block;\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -10;\n    background: linear-gradient(rgba(0,0,0,0), rgba(0,0,0,0.4)), url(${props => props.imageUrl});\n    background-position: ${({theme}) => theme.backgroundPosition};\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n    height: 100%;\n  }\n  \n  .preloadImage {\n    display: none;\n  }\n  \n  h1, h2, h3, h4 {\n    line-height: 1;\n    color: #F4F4F4;\n    margin: 0;\n  }\n  \n  p {\n    margin: 0;\n  }\n`;\n\nexport const AppWrapper = styled.div`\n\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 20px 0 20px;\n  color: #F4F4F4;\n  margin: 0;\n  font-family: 'Montserrat', sans-serif;\n  line-height: 1.6;\n    \n  @media (max-width: 767px) {\n    padding: 6px 6px 0 6px;\n  }\n  \n  .content-container {\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n  }\n`;\n\nexport const WeatherBlock = styled.main`\n\n  background: rgba(0, 0, 0, 0.7);\n  padding: 20px;\n  margin-top: 20px;\n  border-radius: 14px;\n  border: 1px solid #1E1E1E;\n  display: flex;\n  width: 100%;\n  max-width: 1000px;\n  flex-direction: column;\n  \n  @media (max-width: 767px) {\n    margin-top: 6px;\n  }\n`;","export const marsTheme = {\n  themeColor: '#d06d6d',\n  backgroundPosition: '80% 40%',\n}\n\nexport const earthTheme = {\n  themeColor: '#78A9E3',\n  backgroundPosition: '50% 50%',\n}","export const formatDate = (date) =>\n  date.toLocaleDateString(undefined, { day: 'numeric', month: 'long' });\n\nexport const formatTemperature = (temperature, isMetric) => {\n  let returnTemp = temperature;\n  if (!isMetric) {\n    returnTemp = (temperature - 32) * (5 / 9);\n  }\n  return Math.round(returnTemp);\n};\n","import styled from \"styled-components\";\n\nexport const ToggleWrapper = styled.div`\n  overflow: hidden;\n  padding: 0 70px;\n  height: 40px;\n      \n  input {\n    position: absolute;\n    left: -99em;\n  }\n  \n  .toggle {\n    cursor: pointer;\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 40px;\n    background-color: rgba(0, 0, 0, 0.6);\n    border-radius: 84px;\n    transition: background-color 200ms cubic-bezier(0.445, 0.05, 0.55, 0.95);\n  }\n  .toggle:before {\n    content: 'EARTH';\n    position: absolute;\n    left: -70px;\n    top: 5px;\n    font-size: 18px;\n    color: #fff;\n  }\n  .toggle:after {\n    content: 'MARS';\n    position: absolute;\n    right: -60px;\n    top: 5px;\n    font-size: 18px;\n    color: #E0E0E0;\n  }\n  \n  .toggle__handler {\n    display: inline-block;\n    position: relative;\n    z-index: 1;\n    top: 3px;\n    left: 3px;\n    width: 34px;\n    height: 34px;\n    background-color: #83D8FF;\n    border-radius: 50px;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n    transition: all 400ms cubic-bezier(0.68, -0.55, 0.265, 1.55);\n    transform: rotate(-45deg);\n  }\n  .toggle__handler .crater {\n    position: absolute;\n    background-color: #E8CDA5;\n    opacity: 0;\n    transition: opacity 200ms ease-in-out;\n    border-radius: 100%;\n  }\n  .toggle__handler .crater--1 {\n    top: 18px;\n    left: 5px;\n    width: 4px;\n    height: 4px;\n  }\n  .toggle__handler .crater--2 {\n    top: 20px;\n    left: 16px;\n    width: 6px;\n    height: 6px;\n  }\n  .toggle__handler .crater--3 {\n    top: 6px;\n    left: 17px;\n    width: 8px;\n    height: 8px;\n  }\n  \n  .star {\n    position: absolute;\n    background-color: #ffffff;\n    transition: all 300ms cubic-bezier(0.445, 0.05, 0.55, 0.95);\n    border-radius: 50%;\n  }\n  \n  .star--1 {\n    top: 10px;\n    left: 35px;\n    z-index: 0;\n    width: 30px;\n    height: 3px;\n  }\n  \n  .star--2 {\n    top: 18px;\n    left: 28px;\n    z-index: 1;\n    width: 30px;\n    height: 3px;\n  }\n  \n  .star--3 {\n    top: 27px;\n    left: 40px;\n    z-index: 0;\n    width: 30px;\n    height: 3px;\n  }\n  \n  .star--4,\n  .star--5 {\n    opacity: 0;\n    transition: all 300ms 0 cubic-bezier(0.445, 0.05, 0.55, 0.95);\n  }\n  \n  .star--4 {\n    top: 16px;\n    left: 11px;\n    z-index: 0;\n    width: 2px;\n    height: 2px;\n    transform: translate3d(3px, 0, 0);\n  }\n  \n  .star--5 {\n    top: 32px;\n    left: 17px;\n    z-index: 0;\n    width: 3px;\n    height: 3px;\n    transform: translate3d(3px, 0, 0);\n  }\n  \n  input:checked + .toggle {\n    background-color: rgba(0, 0, 0, 0.6);;\n  }\n  input:checked + .toggle:before {\n    color: #E0E0E0;\n  }\n  input:checked + .toggle:after {\n    color: #ffffff;\n  }\n  input:checked + .toggle .toggle__handler {\n    background-color: #FFE5B5;\n    transform: translate3d(40px, 0, 0) rotate(0);\n  }\n  input:checked + .toggle .toggle__handler .crater {\n    opacity: 1;\n  }\n  input:checked + .toggle .star--1 {\n    width: 2px;\n    height: 2px;\n  }\n  input:checked + .toggle .star--2 {\n    width: 4px;\n    height: 4px;\n    transform: translate3d(-5px, 0, 0);\n  }\n  input:checked + .toggle .star--3 {\n    width: 2px;\n    height: 2px;\n    transform: translate3d(-7px, 0, 0);\n  }\n  input:checked + .toggle .star--4,\n  input:checked + .toggle .star--5 {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n  input:checked + .toggle .star--4 {\n    transition: all 300ms 200ms cubic-bezier(0.445, 0.05, 0.55, 0.95);\n  }\n  input:checked + .toggle .star--5 {\n    transition: all 300ms 300ms cubic-bezier(0.445, 0.05, 0.55, 0.95);\n  }\n`;\n","import {ToggleWrapper} from \"./TogglePlanet.styles\";\nimport React from \"react\";\n\nexport const TogglePlanet = ({planet, setPlanet}) => {\n  return (\n    <ToggleWrapper>\n      <input type=\"checkbox\"\n             onChange={() => setPlanet(planet === 'Mars' ? 'Earth' : 'Mars')}\n             id=\"dn\" defaultChecked={(planet === 'Mars')}/>\n      <label htmlFor=\"dn\" className=\"toggle\">\n        <span className=\"toggle__handler\">\n          <span className=\"crater crater--1\"></span>\n          <span className=\"crater crater--2\"></span>\n          <span className=\"crater crater--3\"></span>\n        </span>\n        <span className=\"star star--1\"></span>\n        <span className=\"star star--2\"></span>\n        <span className=\"star star--3\"></span>\n        <span className=\"star star--4\"></span>\n        <span className=\"star star--5\"></span>\n        <span className=\"star star--6\"></span>\n      </label>\n    </ToggleWrapper>\n  )\n}","import styled from 'styled-components';\n\nexport const PreviousWrapper = styled.div`\n  width: 100%;\n  \n  .previous-title {\n    color: #fff;\n    margin: 20px 40px;\n    \n    @media (max-width: 767px) {\n      margin: 20px 0;\n    }\n  }\n`;\n\nexport const PreviousDays = styled.div`\n  overflow-x: scroll;\n  text-align: center;\n`;\n\nexport const PreviousDay = styled.div`\n  .previous-day__date {\n    font-size: 0.9 rem;\n    color: #ADADAD;\n    margin-bottom: 10px;\n  }\n  \n  .previous-day__temp {\n    color: #CDCDCD;\n    font-size: 16px;\n  }\n  \n  .previous-day__more-info {\n    line-height: 30px;\n    height: 30px;\n    text-align: center;\n    width: 100%;\n    cursor: pointer;\n    color: #FFF;\n    transition: all 0.3s;\n    position: relative;\n    margin-top: 10px;\n    \n    span {\n      color: #ADADAD;\n    }\n    \n    :before {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      z-index: 1;\n      opacity: 0;\n      transition: all 0.3s;\n      border-top-width: 1px;\n      border-bottom-width: 1px;\n      border-top-style: solid;\n      border-bottom-style: solid;\n      border-top-color: rgba(255,255,255,0.5);\n      border-bottom-color: rgba(255,255,255,0.5);\n      transform: scale(0.1, 1);\n    }\n    \n    :hover span {\n      letter-spacing: 2px;\n      color: #fff;\n    }\n    \n    :hover::before {\n      opacity: 1; \n      transform: scale(1, 1); \n    }\n    \n    ::after {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      z-index: 1;\n      transition: all 0.3s;\n      background-color: rgba(255,255,255,0.1);\n    }\n    \n    :hover::after {\n      opacity: 0; \n      transform: scale(0.1, 1);\n    }\n  }\n`;","import React from 'react';\nimport {PreviousDay, PreviousDays, PreviousWrapper} from \"./Previous.styles\";\nimport {List, Card} from 'antd';\nimport {formatTemperature} from \"../../../../helpers\";\n\nexport const Previous = ({\n                    marsWeather,\n                    setSelectedSol,\n                    isMetric,\n                    marsLoading,\n                  }) => {\n  return (\n    <PreviousWrapper>\n      <h2 className='previous-title'>Previous 7 days</h2>\n      <PreviousDays>\n        {marsLoading ? (\n            <div>Loading ...</div>\n        ) : (\n            <List\n                grid={{gutter: 12, column: 7}}\n                dataSource={marsWeather}\n                style={{minWidth: '1000px'}}\n                renderItem={item => (\n                    <List.Item key={marsWeather.sol}>\n                      <PreviousDay>\n                        <Card bodyStyle={{padding: 10}}\n                              style={{\n                                color: '#F4F4F4', border: '1px solid #1E1E1E',\n                                borderRadius: 14, backgroundColor: 'rgba(0, 0, 0, 0.6)'\n                              }}>\n                          <h2 className='previous-day__sol'> {item.sol} </h2>\n                          <p className='previous-day__date'> {item.date} </p>\n                          <p className='previous-day__temp'>\n                            High:\n                            <span> {formatTemperature(item.maxTemp, isMetric)}</span>\n                            <span> {isMetric ? ' C' : ' F'} </span>\n                          </p>\n                          <p className='previous-day__temp'>\n                            Low:\n                            <span> {formatTemperature(item.minTemp, isMetric)} </span>\n                            <span> {isMetric ? ' C' : ' F'} </span>\n                          </p>\n                          <div onClick={() => setSelectedSol(item.itemNumber)}\n                               className='previous-day__more-info'>\n                            <span>More info</span>\n                          </div>\n                        </Card>\n                      </PreviousDay>\n                    </List.Item>\n                )}\n            />\n        )}\n      </PreviousDays>\n    </PreviousWrapper>\n  )\n};","import styled from 'styled-components';\n\nexport const UnitStyles = styled.div`\n  color: #fff;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  opacity: 0.7;\n  transition: opacity 275ms linear;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const Toggle = styled.button`\n  cursor: pointer;\n  width: 4em;\n  border: 2px solid #fff;\n  background: transparent;\n  padding: 0;\n  border-radius: 100vmax;\n  margin: 0 10px;\n  outline: 0;\n\n  ::after {\n    content: '';\n    display: block;\n    background: #fff;\n    border-radius: 50%;\n    height: 1rem;\n    margin: 3px;\n    margin-left: ${(props) => (props.metric ? '3px' : 'auto')};\n    width: 1rem;\n  }\n`;\n","import React from 'react';\nimport { UnitStyles, Toggle } from './Unit.styles';\n\nexport const Unit = ({ isMetric, setMetric }) => (\n  <UnitStyles>\n    <label htmlFor='cel'>°C</label>\n    <Toggle metric={isMetric} onClick={() => setMetric((prev) => !prev)} />\n    <label htmlFor='fah'>°F</label>\n  </UnitStyles>\n);\n","import styled from 'styled-components';\n\nexport const WeatherWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`;\n\nexport const WeatherItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 20px 20px 0 20px;\n  width: 240px;\n  \n  .weather-instance-container {\n    display: flex;\n    margin-bottom: 10px;\n  }\n  \n  .photo {\n    width: 160px;\n    border: 1px solid #1E1E1E;\n    border-radius: 8px;\n  }\n  \n  .photo-description {\n    text-align: center;\n    margin-top: 10px;\n    width: 190px;\n    font-size: 0.9rem;\n    color: #ADADAD;\n  }\n`;\n\nexport const WeatherInstance = styled.div`\n  margin: 0 20px;\n\n  .instance-value {\n    font-size: 1.7rem;\n    display: flex;\n    justify-content: center;\n  }\n  \n  .instance-description {\n    text-align: center;\n    font-size: 1.1rem;\n    color: #ADADAD;\n  }\n`;","import React from 'react';\nimport {WeatherInstance, WeatherItem, WeatherWrapper} from \"../WeatherData.styles\";\nimport { formatTemperature } from '../../../helpers';\nimport currentPhoto from '../../../img/context_camera.PNG'\nimport {Popover} from \"antd\";\nimport {InfoCircleFilled} from '@ant-design/icons';\n\nconst MarsWeatherData = ({sol, isMetric}) => (\n  <WeatherWrapper>\n    <WeatherItem>\n      <div className='weather-instance-container'>\n        <WeatherInstance>\n          <div className='instance-value'>\n            {formatTemperature(sol.maxTemp, isMetric)}\n            <span> {isMetric ? ' °C' : ' °F'} </span>\n          </div>\n          <div className='instance-description'>High</div>\n        </WeatherInstance>\n        <WeatherInstance>\n          <div className='instance-value'>\n            {formatTemperature(sol.minTemp, isMetric)}\n            <span> {isMetric ? ' °C' : ' °F'} </span>\n          </div>\n          <div className='instance-description'>Low</div>\n        </WeatherInstance>\n      </div>\n        <WeatherInstance>\n          <div className='instance-value'>{sol.windSpeed === 'No data' ? 'No data'\n                                                                       : `${sol.windSpeed} mph`}</div>\n          <div className='instance-description'>Wind</div>\n        </WeatherInstance>\n    </WeatherItem>\n\n    <WeatherItem>\n      <img className='photo' src={currentPhoto} alt=\"current\"/>\n      <div className='photo-description'>\n        Lander-mounted, Instrument Context Camera (ICC)\n        <Popover\n          overlayStyle={{maxWidth: 220}}\n          content={`NASA's InSight Mars lander acquired this image in front of the lander on ${sol.date}`}\n          trigger=\"hover\">\n          <InfoCircleFilled style={{fontSize: 20, marginLeft: 5, color: '#fff'}}/>\n        </Popover>\n      </div>\n    </WeatherItem>\n  </WeatherWrapper>\n);\n\nexport default MarsWeatherData;","import styled from 'styled-components';\n\nexport const WeatherTitle = styled.h1`\n  align-self: center;\n  text-align: center;\n  font-size: var(--fs-h1);\n  font-weight: var(--fw-semi);\n  margin-bottom: 20px;\n  color: #CDCDCD;\n  \n  .weather-location {\n    color: ${({theme}) => theme.themeColor};\n    text-transform: uppercase;\n    letter-spacing: 2px;\n  }\n`;\n\nexport const SectionTitle = styled.div`\n  display: flex;\n  justify-content: space-between;\n  \n  p {\n    color: #ADADAD;\n    font-size: 1.1rem;\n  }\n  \n  span {\n    font-size: var(--fs-body);\n    color: #ADADAD;\n  }\n  \n  .unit-container {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport const SearchContainer = styled.div`\n  margin: 20px 0;\n  text-align: center;\n  \n  .error {\n    font-size: 1.2rem;\n    color: #fff;\n  }\n`;","import {Unit} from \"./Unit/Unit\";\nimport MarsWeatherData from \"./MarsWeatherData\";\nimport React from \"react\";\nimport {SectionTitle, WeatherTitle} from \"../Weather.styles\";\n\nexport const MarsWeather = ({marsWeather, isMetric, marsLoading, setMetric, selectedSol}) => {\n  return (\n    marsLoading ? (\n        <div>Loading ...</div>\n    ) : (\n        <>\n          <WeatherTitle> Latest weather at\n            <span className='weather-location'> Elysium Plantitia</span>\n          </WeatherTitle>\n          <SectionTitle>\n            <div>\n              <h2>\n                {marsWeather[selectedSol].sol || 'sol'}<span> (day on Mars)</span>\n              </h2>\n              <p>{marsWeather[selectedSol].date || 'date'}</p>\n            </div>\n            <div className='unit-container'>\n              <Unit isMetric={isMetric} setMetric={setMetric}/>\n            </div>\n          </SectionTitle>\n          <MarsWeatherData sol={marsWeather[selectedSol]} isMetric={isMetric}/>\n        </>\n    )\n  )\n}","import React from \"react\";\nimport {WeatherInstance, WeatherItem, WeatherWrapper} from \"../WeatherData.styles\";\n\nexport const EarthWeatherData = ({earthWeather}) => {\n  const {temp, humidity, pressure} = earthWeather\n\n  return (\n      <WeatherWrapper>\n        <WeatherItem>\n          <div className='weather-instance-container'>\n            <WeatherInstance>\n              <div className='instance-value'>{Math.round(temp)} °C</div>\n              <div className='instance-description'>Temp</div>\n            </WeatherInstance>\n            <WeatherInstance>\n              <div className='instance-value'>{humidity} %</div>\n              <div className='instance-description'>Humidity</div>\n            </WeatherInstance>\n          </div>\n          <WeatherInstance>\n            <div className='instance-value'>{pressure} hPa</div>\n            <div className='instance-description'>Pressure</div>\n          </WeatherInstance>\n        </WeatherItem>\n      </WeatherWrapper>\n  )\n}","import React, {useState} from \"react\";\nimport {Input} from 'antd';\nimport {EarthWeatherData} from \"./EarthWeatherData\";\nimport {SearchContainer, WeatherTitle} from \"../Weather.styles\";\nimport axios from \"axios\";\n\nexport const EarthWeather = ({earthWeather, setEarthWeather, city, setCity}) => {\n  const [earthLoading, setEarthLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const {Search} = Input;\n\n  const fetchEarthData = async city => {\n    if (!city) {\n      return setError(\"Please enter the name of the city\");\n    }\n    setEarthLoading(true)\n    const url = `https://api.openweathermap.org/data/2.5/` +\n        `weather?q=${city}&appid=3d210771b356ac5fbc2fd51f7a263aa2&units=metric`;\n    const response = await axios.get(url)\n        .catch(error => {\n          setEarthLoading(false)\n          return setError(error.response.data.message);\n    });\n    if (!response) {\n      return\n    }\n    setError(null);\n    setEarthWeather(response.data.main);\n    setCity(response.data.name);\n    setEarthLoading(false)\n  };\n\n  return (\n    <>\n      <WeatherTitle>\n        {earthWeather == null ? 'Enter the name of the city to get started!'\n                              : <>Current weather in <span className='weather-location'>{city}</span></>\n        }\n      </WeatherTitle>\n      <SearchContainer>\n        <Search\n            onSearch={city => fetchEarthData(city)}\n            loading={earthLoading}\n            style={{maxWidth: 400, borderRadius: 10}}\n            size=\"large\"\n        />\n        {error !== null && <p className='error'>{error}</p>}\n      </SearchContainer>\n      {earthWeather !== null && <EarthWeatherData earthWeather={earthWeather}/>}\n    </>\n  )\n}","import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {GlobalStyle, AppWrapper, WeatherBlock} from './App.styles';\nimport { ThemeProvider } from 'styled-components';\nimport {marsTheme, earthTheme} from './theme';\nimport MarsBGImage from './img/mars.jpg';\nimport EarthBGImage from './img/earth.jpg';\n\nimport {formatDate} from \"./helpers\";\nimport {TogglePlanet} from \"./components/TogglePlanet/TogglePlanet\";\nimport {Previous} from \"./components/Weather/MarsWeather/Previous/Previous\";\nimport {MarsWeather} from \"./components/Weather/MarsWeather/MarsWeather\";\nimport {EarthWeather} from \"./components/Weather/EarthWeather/EarthWeather\";\n\nconst App = () => {\n  const [planet, setPlanet] = useState('Mars');\n\n  // Earth\n  const [earthWeather, setEarthWeather] = useState(null);\n  const [city, setCity] = useState(null);\n\n  // Mars\n  const [marsWeather, setMarsWeather] = useState([]);\n  const [marsLoading, setMarsLoading] = useState(true);\n  const [isMetric, setMetric] = useState(true);\n  const [selectedSol, setSelectedSol] = useState(); // \"Sol\" is a Mars solar day\n\n  const fetchMarsData = async () => {\n    const url = 'https://api.nasa.gov/insight_weather/' +\n        '?api_key=tCe59kbvnGzFzWrvO4ufe1e8g748WbgiR9e5Wr2B&feedtype=json&ver=1.0';\n    const request = axios.get(url);\n    const response = await request;\n    const marsWeather = response.data.sol_keys.map((solKey, i) => {\n      return {\n        sol: solKey,\n        maxTemp: response.data[solKey].AT?.mx || 'No data',\n        minTemp: response.data[solKey].AT?.mn || 'No data',\n        windSpeed: response.data[solKey].HWS && response.data[solKey].HWS.av\n            ? Math.round(response.data[solKey].HWS.av) : 'No data',\n        date: formatDate(new Date(response.data[solKey].First_UTC)),\n        itemNumber: i,\n      };\n    });\n    setMarsWeather(marsWeather);\n    setSelectedSol(marsWeather.length - 1);\n    setMarsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchMarsData();\n  }, []);\n\n  return (\n    <ThemeProvider theme={planet === 'Mars' ? marsTheme : earthTheme}>\n      <>\n        <GlobalStyle imageUrl={planet === 'Mars' ? MarsBGImage : EarthBGImage}/>\n        <img src={MarsBGImage} alt={'#'} className='preloadImage'/>\n        <img src={EarthBGImage} alt={'#'} className='preloadImage'/>\n        <AppWrapper>\n          <div className='content-container'>\n            <TogglePlanet planet={planet} setPlanet={setPlanet}/>\n            <WeatherBlock>\n              {planet === 'Mars'\n                  ? <MarsWeather marsWeather={marsWeather}\n                                 isMetric={isMetric}\n                                 marsLoading={marsLoading}\n                                 setMetric={setMetric}\n                                 selectedSol={selectedSol}/>\n                  : <EarthWeather earthWeather={earthWeather}\n                                  setEarthWeather={setEarthWeather}\n                                  city={city}\n                                  setCity={setCity}/>\n              }\n            </WeatherBlock>\n          </div>\n          {planet === 'Mars' &&\n          <Previous marsWeather={marsWeather}\n                    setSelectedSol={setSelectedSol}\n                    isMetric={isMetric}\n                    marsLoading={marsLoading}\n          />}\n        </AppWrapper>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mars.0d4cbc41.jpg\";","module.exports = __webpack_public_path__ + \"static/media/earth.464a0c64.jpg\";"],"sourceRoot":""}